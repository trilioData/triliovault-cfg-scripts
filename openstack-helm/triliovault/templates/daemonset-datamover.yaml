{{/*
Licensed under the TrilioVault License
*/}}

{{- define "triliovaultDatamoverLivenessProbeTemplate" }}
exec:
  command:
    - python
    - /tmp/health-probe.py
    - --config-file
    - /etc/nova/nova.conf
    - --service-queue-name
    - compute
    - --liveness-probe
    {{- if .Values.pod.use_fqdn.datamover }}
    - --use-fqdn
    {{- end }}
{{- end }}

{{- define "triliovaultDatamoverReadinessProbeTemplate" }}
exec:
  command:
    - python
    - /tmp/health-probe.py
    - --config-file
    - /etc/nova/nova.conf
    - --service-queue-name
    - compute
    {{- if .Values.pod.use_fqdn.datamover }}
    - --use-fqdn
    {{- end }}
{{- end }}

{{- define "triliovault.datamover.daemonset" }}
{{- $daemonset := index . 0 }}
{{- $configMapName := index . 1 }}
{{- $serviceAccountName := index . 2 }}
{{- $envAll := index . 3 }}
{{- with $envAll }}

{{- $mounts_triliovault_datamover := .Values.pod.mounts.triliovault_datamover.triliovault_datamover }}
{{- $mounts_triliovault_datamover_init := .Values.pod.mounts.triliovault_datamover.init_container }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: triliovault-datamover
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  labels:
{{ tuple $envAll .Chart.Name $daemonset | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  selector:
    matchLabels:
{{ tuple $envAll .Chart.Name $daemonset | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
{{ tuple $envAll $daemonset | include "helm-toolkit.snippets.kubernetes_upgrades_daemonset" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll .Chart.Name $daemonset | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
{{ dict "envAll" $envAll "podName" "triliovault-datamover-default" "containerNames" (list "datamover" "init" "datamover-init" "datamover-vnc-init") | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
{{ dict "envAll" $envAll "application" "triliovault" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      nodeSelector:
        {{ .Values.labels.agent.datamover.node_selector_key }}: {{ .Values.labels.agent.datamover.node_selector_value }}
      hostNetwork: true
      hostPID: true
      hostIPC: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
{{ tuple $envAll "pod_dependency" $mounts_datamover_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: triliovault-datamover-init
{{ tuple $envAll "triliovault_datamover" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "triliovault" "container" "triliovault_datamover_init" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
            - name: DATAMOVER_USER_UID
              value: "{{ .Values.pod.security_context.datamover.pod.runAsUser }}"
          command:
            - /tmp/triliovault-datamover-init.sh
          terminationMessagePath: /var/log/termination-log
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: triliovault-bin
              mountPath: /tmp/triliovault-datamover-init.sh
              subPath: triliovault-datamover-init.sh
              readOnly: true
            - name: varlibnova
              mountPath: /var/lib/nova
            - name: pod-shared
              mountPath: /tmp/pod-shared
{{ if $mounts_datamover.volumeMounts }}{{ toYaml $mounts_nova_compute.volumeMounts | indent 12 }}{{ end }}
        {{- if .Values.conf.ceph.enabled }}
        - name: ceph-perms
{{ tuple $envAll "triliovault_datamover" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "triliovault" "container" "ceph_perms" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - chown
            - -R
            - "nova:"
            - /etc/ceph
          terminationMessagePath: /var/log/termination-log
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: etcceph
              mountPath: /etc/ceph
{{ if $mounts_triliovault_datamover.volumeMounts }}{{ toYaml $mounts_triliovault_datamover.volumeMounts | indent 12 }}{{ end }}
        {{- if empty .Values.conf.ceph.cinder.keyring }}
        - name: ceph-admin-keyring-placement
{{ tuple $envAll "triliovault_datamover" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "triliovault" "container" "ceph_admin_keyring_placement" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/ceph-admin-keyring.sh
          terminationMessagePath: /var/log/termination-log
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: etcceph
              mountPath: /etc/ceph
            - name: triliovault-bin
              mountPath: /tmp/ceph-admin-keyring.sh
              subPath: ceph-admin-keyring.sh
              readOnly: true
            {{- if empty .Values.conf.ceph.admin_keyring }}
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
            {{ end }}
{{ if $mounts_triliovault_datamover.volumeMounts }}{{ toYaml $mounts_triliovault_datamover.volumeMounts | indent 12 }}{{ end }}
        {{ end }}
        - name: ceph-keyring-placement
{{ tuple $envAll "triliovault_datamover" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "triliovault" "container" "ceph_keyring_placement" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
            - name: CEPH_CINDER_USER
              value: "{{ .Values.conf.ceph.cinder.user }}"
            {{- if .Values.conf.ceph.cinder.keyring }}
            - name: CEPH_CINDER_KEYRING
              value: "{{ .Values.conf.ceph.cinder.keyring }}"
            {{ end }}
            - name: LIBVIRT_CEPH_SECRET_UUID
              value: "{{ .Values.conf.ceph.secret_uuid }}"
          command:
            - /tmp/ceph-keyring.sh
          terminationMessagePath: /var/log/termination-log
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: etcceph
              mountPath: /etc/ceph
            - name: triliovault-bin
              mountPath: /tmp/ceph-keyring.sh
              subPath: ceph-keyring.sh
            - name: ceph-etc
              mountPath: /etc/ceph/ceph.conf.template
              subPath: ceph.conf
              readOnly: true
{{ if $mounts_triliovault_datamover.volumeMounts }}{{ toYaml $mounts_triliovault_datamover.volumeMounts | indent 12 }}{{ end }}
        {{ end }}
        {{- if ( has "tungstenfabric" .Values.network.backend ) }}
        - name: tungstenfabric-compute-init
          image: {{ .Values.images.tags.tf_compute_init }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
{{ tuple $envAll $envAll.Values.pod.resources.compute | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "triliovault" "container" "tungstenfabric_compute_init" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          volumeMounts:
            - name: tf-plugin-shared
              mountPath: /opt/plugin
            - name: tf-plugin-bin
              mountPath: /opt/plugin/bin
{{ if $mounts_triliovault_datamover.volumeMounts }}{{ toYaml $mounts_triliovault_datamover.volumeMounts | indent 12 }}{{ end }}
        {{- end }}
        {{- if .Values.network.ssh.enabled }}
        - name: nova-compute-ssh-init
{{ tuple $envAll "nova_compute_ssh" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.ssh | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "nova" "container" "nova_compute_ssh_init" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          terminationMessagePath: /var/log/termination-log
          env:
            - name: SSH_PORT
              value: {{ .Values.network.ssh.port | quote }}
            - name: NOVA_USER_UID
              value: "{{ .Values.pod.security_context.nova.pod.runAsUser }}"
          command:
            - /tmp/ssh-init.sh
          volumeMounts:
            - name: varlibnova
              mountPath: /var/lib/nova
            - name: nova-ssh
              mountPath: /tmp/nova-ssh/authorized_keys
              subPath: public-key
            - name: nova-ssh
              mountPath: /tmp/nova-ssh/id_rsa
              subPath: private-key
            - name: nova-bin
              mountPath: /tmp/ssh-init.sh
              subPath: ssh-init.sh
              readOnly: true
{{ if $mounts_nova_compute.volumeMounts }}{{ toYaml $mounts_nova_compute.volumeMounts | indent 12 }}{{ end }}
        {{- end }}
      containers:
        - name: triliovault_datamover
{{ tuple $envAll "triliovault_datamover" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.compute | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "triliovault" "container" "triliovault_datamover" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
          {{- if .Values.conf.ceph.enabled }}
            - name: CEPH_CINDER_USER
              value: "{{ .Values.conf.ceph.cinder.user }}"
            {{- if .Values.conf.ceph.cinder.keyring }}
            - name: CEPH_CINDER_KEYRING
              value: "{{ .Values.conf.ceph.cinder.keyring }}"
            {{ end }}
            - name: LIBVIRT_CEPH_SECRET_UUID
              value: "{{ .Values.conf.ceph.secret_uuid }}"
          {{ end }}
            - name: RPC_PROBE_TIMEOUT
              value: "{{ .Values.pod.probes.rpc_timeout }}"
            - name: RPC_PROBE_RETRIES
              value: "{{ .Values.pod.probes.rpc_retries }}"
{{- if .Values.manifests.certificates }}
            - name: REQUESTS_CA_BUNDLE
              value: "/etc/nova/certs/ca.crt"
{{- end }}
{{ dict "envAll" $envAll "component" "datamover" "container" "default" "type" "liveness" "probeTemplate" (include "triliovaultDatamoverLivenessProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}{{ dict "envAll" $envAll "component" "compute" "container" "default" "type" "readiness" "probeTemplate" (include "triliovaultDatamoverReadinessProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
          command:
            - /tmp/triliovault-datamover.sh
          terminationMessagePath: /var/log/termination-log
          volumeMounts:
            - name: dev-pts
              mountPath: /dev/pts
            - name: pod-tmp
              mountPath: /tmp
            - name: nova-bin
              mountPath: /tmp/triliovault-datamover.sh
              subPath: triliovault-datamover.sh
              readOnly: true
            - name: triliovault-bin
              mountPath: /tmp/health-probe.py
              subPath: health-probe.py
              readOnly: true
            - name: triliovault-etc
              mountPath: /etc/nova/nova.conf
              subPath: nova-compute.conf
              readOnly: true
            - name: triliovault-etc
              mountPath: /etc/tvault-contego/tvault-contego.conf
              subPath: tvault-contego.conf
              readOnly: true
            {{- if .Values.conf.nova.DEFAULT.log_config_append }}
            - name: triliovault-etc
              mountPath: {{ .Values.conf.nova.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.triliovault.DEFAULT.log_config_append }}
              readOnly: true
            {{- end }}
            - name: triliovault-etc
              mountPath: /etc/tvault-contego/policy.yaml
              subPath: policy.yaml
              readOnly: true
            - name: triliovault-etc
              # NOTE (Portdirect): We mount here to override Kollas
              # custom sudoers file when using Kolla images, this
              # location will also work fine for other images.
              mountPath: /etc/sudoers.d/kolla_triliovault_sudoers
              subPath: triliovault_sudoers
              readOnly: true
            - name: triliovault-etc
              mountPath: /etc/tvault-contego/rootwrap.conf
              subPath: rootwrap.conf
              readOnly: true
            {{- range $key, $value := $envAll.Values.conf.rootwrap_filters }}
            {{- if ( has "compute" $value.pods ) }}
            {{- $filePrefix := replace "_" "-"  $key }}
            {{- $rootwrapFile := printf "/etc/nova/rootwrap.d/%s.filters" $filePrefix }}
            - name: triliovault-etc
              mountPath: {{ $rootwrapFile }}
              subPath: {{ base $rootwrapFile }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.conf.ceph.enabled }}
            - name: etcceph
              mountPath: /etc/ceph
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: Bidirectional
              {{- end }}
            {{- if and ( empty .Values.conf.ceph.cinder.keyring ) ( empty .Values.conf.ceph.admin_keyring )}}
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
            {{ end }}
            {{ end }}
            - mountPath: /lib/modules
              name: libmodules
              readOnly: true
            - name: varlibnova
              mountPath: /var/lib/nova
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: Bidirectional
              {{- end }}
            - name: varliblibvirt
              mountPath: /var/lib/libvirt
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: Bidirectional
              {{- end }}
            - name: run
              mountPath: /run
            - name: cgroup
              mountPath: /sys/fs/cgroup
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
            - name: machine-id
              mountPath: /etc/machine-id
              readOnly: true
            {{- if .Values.conf.enable_iscsi }}
            - name: host-rootfs
              mountPath: /mnt/host-rootfs
              mountPropagation: HostToContainer
            - name: usrlocalsbin
              mountPath: /usr/local/sbin
            - name: etciscsi
              mountPath: /etc/iscsi
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: HostToContainer
              {{- end }}
            - name: dev
              mountPath: /dev
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: HostToContainer
              {{- end }}
            - name: triliovault-bin
              mountPath: /usr/local/sbin/iscsiadm
              subPath: iscsiadm
            - name: runlock
              mountPath: /run/lock
            - name: nova-bin
              mountPath: /usr/local/sbin/multipath
              subPath: multipath
            - name: nova-bin
              mountPath: /usr/local/sbin/multipathd
              subPath: multipathd
            - name: etcmultipath
              mountPath: /etc/multipath
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: Bidirectional
              {{- end }}
            - name: sysblock
              mountPath: /sys/block
              {{- if or ( gt .Capabilities.KubeVersion.Major "1" ) ( ge .Capabilities.KubeVersion.Minor "10" ) }}
              mountPropagation: HostToContainer
              {{- end }}
            {{- end }}
            {{- if ( has "tungstenfabric" .Values.network.backend ) }}
            - name: tf-plugin-shared
              mountPath: /opt/plugin
              readOnly: true
            - name: tf-plugin-bin
              mountPath: /usr/sbin
              readOnly: true
            - name: triliovault-bin
              mountPath: /usr/local/lib/python2.7/site-packages/tf-plugin.pth
              subPath: tf-plugin.pth
              readOnly: true
            - name: triliovault-bin
              mountPath: /var/lib/openstack/lib/python2.7/site-packages/tf-plugin.pth
              subPath: tf-plugin.pth
              readOnly: true
            - name: triliovault-bin
              mountPath: /var/lib/openstack/lib/python3.6/site-packages/tf-plugin.pth
              subPath: tf-plugin.pth
              readOnly: true
            {{- end }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.secrets.tls.compute.osapi.internal "path" "/etc/nova/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_messaging.auth.admin.secret.tls.internal "path" "/etc/rabbitmq/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{ if $mounts_nova_compute.volumeMounts }}{{ toYaml $mounts_nova_compute.volumeMounts | indent 12 }}{{ end }}
        {{- if .Values.network.ssh.enabled }}
        - name: nova-compute-ssh
{{ tuple $envAll "nova_compute_ssh" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.ssh | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "nova" "container" "nova_compute_ssh" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
            - name: KEY_TYPES
              value: {{ include "helm-toolkit.utils.joinListWithComma" .Values.network.ssh.key_types | quote }}
            - name: SSH_PORT
              value: {{ .Values.network.ssh.port | quote }}
{{- if .Values.manifests.certificates }}
            - name: REQUESTS_CA_BUNDLE
              value: "/etc/nova/certs/ca.crt"
{{- end }}
          ports:
            - containerPort: {{ .Values.network.ssh.port }}
          command:
            - /tmp/ssh-start.sh
          terminationMessagePath: /var/log/termination-log
          volumeMounts:
            - name: varlibnova
              mountPath: /var/lib/nova
            - name: nova-bin
              mountPath: /tmp/ssh-start.sh
              subPath: ssh-start.sh
              readOnly: true
{{- dict "enabled" .Values.manifests.certificates "name" .Values.secrets.tls.compute.osapi.internal "path" "/etc/nova/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{ if $mounts_nova_compute.volumeMounts }}{{ toYaml $mounts_nova_compute.volumeMounts | indent 12 }}{{ end }}
        {{ end }}
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: nova-bin
          configMap:
            name: nova-bin
            defaultMode: 0555
        - name: nova-etc
          secret:
            secretName: {{ $configMapName }}
            defaultMode: 0444
        {{- if .Values.network.ssh.enabled }}
        - name: nova-ssh
          secret:
            secretName: nova-ssh
            defaultMode: 0644
        {{ end }}
        {{- if .Values.conf.ceph.enabled }}
        - name: etcceph
          hostPath:
            path: /var/lib/openstack-helm/compute/nova
        - name: ceph-etc
          configMap:
            name: {{ .Values.ceph_client.configmap }}
            defaultMode: 0444
        {{- if and ( empty .Values.conf.ceph.cinder.keyring ) ( empty .Values.conf.ceph.admin_keyring ) }}
        - name: ceph-keyring
          secret:
            secretName: {{ .Values.ceph_client.user_secret_name }}
        {{ end }}
        {{ end }}
        - name: dev-pts
          hostPath:
            path: /dev/pts
        - name: libmodules
          hostPath:
            path: /lib/modules
        - name: varlibnova
          hostPath:
            path: /var/lib/nova
        - name: varliblibvirt
          hostPath:
            path: /var/lib/libvirt
        - name: run
          hostPath:
            path: /run
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: pod-shared
          emptyDir: {}
        - name: machine-id
          hostPath:
            path: /etc/machine-id
        {{- if .Values.conf.enable_iscsi }}
        - name: host-rootfs
          hostPath:
            path: /
        - name: runlock
          hostPath:
            path: /run/lock
        - name: etciscsi
          hostPath:
            path: /etc/iscsi
        - name: dev
          hostPath:
            path: /dev
        - name: usrlocalsbin
          emptyDir: {}
        - name: etcmultipath
          hostPath:
            path: /etc/multipath
        - name: sysblock
          hostPath:
            path: /sys/block

        {{- end }}
        {{- if ( has "tungstenfabric" .Values.network.backend ) }}
        - name: tf-plugin-shared
          emptyDir: {}
        - name: tf-plugin-bin
          emptyDir: {}
        {{- end }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.secrets.tls.compute.osapi.internal | include "helm-toolkit.snippets.tls_volume" | indent 8 }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_messaging.auth.admin.secret.tls.internal | include "helm-toolkit.snippets.tls_volume" | indent 8 }}
{{ if $mounts_nova_compute.volumes }}{{ toYaml $mounts_nova_compute.volumes | indent 8 }}{{ end }}
{{- end }}
{{- end }}

{{- if .Values.manifests.daemonset_compute }}
{{- $envAll := . }}
{{- $daemonset := "triliovault-datamover" }}
{{- $configMapName := "triliovault-etc" }}
{{- $serviceAccountName := "triliovault-datamover" }}

{{- $dependencyOpts := dict "envAll" $envAll "dependencyMixinParam" $envAll.Values.network.backend "dependencyKey" "compute" -}}
{{- $_ := include "helm-toolkit.utils.dependency_resolver" $dependencyOpts | toString | fromYaml }}

{{ tuple $envAll "pod_dependency" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
{{- $daemonset_yaml := list $daemonset $configMapName $serviceAccountName . | include "nova.compute.daemonset" | toString | fromYaml }}
{{- $configmap_yaml := "nova.configmap.etc" }}
{{- list $daemonset $daemonset_yaml $configmap_yaml $configMapName . | include "helm-toolkit.utils.daemonset_overrides" }}
{{- end }}
