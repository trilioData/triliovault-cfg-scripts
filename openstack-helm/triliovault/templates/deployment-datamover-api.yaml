{{/*
Licensed under TrilioVault License
*/}}

{{- if .Values.manifests.deployment_datamover_api }}
{{- $envAll := . }}

{{- $mounts_datamover_api := .Values.pod.mounts.datamover_api.datamover_api }}
{{- $mounts_datamover_api_init := .Values.pod.mounts.datamover_api.init_container }}

{{- $serviceAccountName := "datamover-api" }}
{{ tuple $envAll "api" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datamover-api
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  labels:
{{ tuple $envAll "triliovault" "datamover-api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  replicas: {{ .Values.pod.replicas.datamover_api }}
  selector:
    matchLabels:
{{ tuple $envAll "triliovault" "datamover-api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
{{ tuple $envAll | include "helm-toolkit.snippets.kubernetes_upgrades_deployment" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "triliovault" "datamover-api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
{{ dict "envAll" $envAll "podName" "cinder-api" "containerNames" (list "cinder-api" "ceph-coordination-volume-perms" "init") | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
{{ dict "envAll" $envAll "application" "cinder_api" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      affinity:
{{ tuple $envAll "cinder" "api" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.labels.api.node_selector_key }}: {{ .Values.labels.api.node_selector_value }}
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.api.timeout | default "30" }}
      initContainers:
{{ tuple $envAll "api" $mounts_cinder_api_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        {{- if eq ( split "://" .Values.conf.cinder.coordination.backend_url )._0 "file" }}
        - name: ceph-coordination-volume-perms
{{ tuple $envAll "cinder_api" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "cinder_api" "container" "ceph_coordination_volume_perms" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - chown
            - -R
            - "cinder:"
            - {{ ( split "://" .Values.conf.cinder.coordination.backend_url )._1 }}
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: cinder-coordination
              mountPath: {{ ( split "://" .Values.conf.cinder.coordination.backend_url )._1 }}
        {{ end }}
      containers:
        - name: cinder-api
{{ tuple $envAll "cinder_api" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.api | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "cinder_api" "container" "cinder_api" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/cinder-api.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/cinder-api.sh
                  - stop
          ports:
            - name: c-api
              containerPort: {{ tuple "volumev3" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
          readinessProbe:
            tcpSocket:
              port: {{ tuple "volumev3" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
          livenessProbe:
            tcpSocket:
              port: {{ tuple "volumev3" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: wsgi-cinder
              mountPath: /var/www/cgi-bin/cinder
            - name: cinder-bin
              mountPath: /tmp/cinder-api.sh
              subPath: cinder-api.sh
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/cinder.conf
              subPath: cinder.conf
              readOnly: true
            {{- if .Values.conf.cinder.DEFAULT.log_config_append }}
            - name: cinder-etc
              mountPath: {{ .Values.conf.cinder.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.cinder.DEFAULT.log_config_append }}
              readOnly: true
            {{- end }}
            - name: cinder-etc
              mountPath: /etc/cinder/api-paste.ini
              subPath: api-paste.ini
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/policy.yaml
              subPath: policy.yaml
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/api_audit_map.conf
              subPath: api_audit_map.conf
              readOnly: true
            - name: cinder-etc
              mountPath: {{ .Values.conf.cinder.DEFAULT.resource_query_filters_file }}
              subPath: resource_filters.json
              readOnly: true
{{- if .Values.conf.security }}
            - name: cinder-etc
              mountPath: {{ .Values.conf.software.apache2.conf_dir }}/security.conf
              subPath: security.conf
              readOnly: true
{{- end }}
            {{- if eq ( split "://" .Values.conf.cinder.coordination.backend_url )._0 "file" }}
            - name: cinder-coordination
              mountPath: {{ ( split "://" .Values.conf.cinder.coordination.backend_url )._1 }}
            {{- end }}
            {{- if .Values.manifests.certificates }}
            - name: cinder-etc
              mountPath: {{ .Values.conf.software.apache2.site_dir }}/cinder-api.conf
              subPath: wsgi-cinder.conf
              readOnly: true
            - name: cinder-etc
              mountPath: {{ .Values.conf.software.apache2.mods_dir }}/mpm_event.conf
              subPath: mpm_event.conf
              readOnly: true
            {{- end }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_db.auth.admin.secret.tls.internal "path" "/etc/mysql/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.secrets.tls.volumev3.api.internal "path" "/etc/cinder/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_messaging.auth.admin.secret.tls.internal "path" "/etc/rabbitmq/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{ if $mounts_cinder_api.volumeMounts }}{{ toYaml $mounts_cinder_api.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: wsgi-cinder
          emptyDir: {}
        - name: cinder-bin
          configMap:
            name: cinder-bin
            defaultMode: 0555
        - name: cinder-etc
          secret:
            secretName: cinder-etc
            defaultMode: 0444
        {{- if eq ( split "://" .Values.conf.cinder.coordination.backend_url )._0 "file" }}
        # NOTE (portdirect): this will need to be set to a shared mount amongst all cinder
        # pods for the coordination backend to be fully functional.
        - name: cinder-coordination
          emptyDir: {}
        {{- end }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_db.auth.admin.secret.tls.internal | include "helm-toolkit.snippets.tls_volume" | indent 8 }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.secrets.tls.volumev3.api.internal | include "helm-toolkit.snippets.tls_volume" | indent 8 }}
{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_messaging.auth.admin.secret.tls.internal | include "helm-toolkit.snippets.tls_volume" | indent 8 }}
{{ if $mounts_cinder_api.volumes }}{{ toYaml $mounts_cinder_api.volumes | indent 8 }}{{ end }}
{{- end }}
