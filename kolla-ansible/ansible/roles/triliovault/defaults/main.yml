---
project_name: "triliovault"

triliovault_services:
  triliovault-datamover-api:
    container_name: "triliovault_datamover_api"
    group: "{{ triliovault_datamover_api_group }}"
    image: "{{ triliovault_datamover_api_image_full }}"
    enabled: True
    privileged: False
    volumes: "{{ triliovault_datamover_api_default_volumes }}"
    dimensions: "{{ triliovault_datamover_api_dimensions }}"
    haproxy:
      triliovault_datamover_api:
        enabled: "{{ enable_triliovault }}"
        mode: "http"
        external: false
        port: "{{ triliovault_datamover_api_port }}"
        listen_port: "{{ triliovault_datamover_api_listen_port }}"
        tls_backend: "{{ triliovault_enable_tls_backend }}"
      triliovault_datamover_api_external:
        enabled: "{{ enable_triliovault }}"
        mode: "http"
        external: true
        port: "{{ triliovault_datamover_api_port }}"
        listen_port: "{{ triliovault_datamover_api_listen_port }}"
        tls_backend: "{{ triliovault_enable_tls_backend }}"
  triliovault-datamover:
    container_name: "triliovault_datamover"
    group: "{{ triliovault_datamover_group }}"
    image: "{{ triliovault_datamover_image_full }}"
    enabled: True
    privileged: True
    volumes: "{{ triliovault_datamover_default_volumes }}"
    dimensions: "{{ triliovault_datamover_dimensions }}"

####################
# Docker
####################
triliovault_datamover_api_image: "{{ triliovault_docker_registry }}/trilio/{{ kolla_base_distro }}-binary-trilio-datamover-api"
triliovault_datamover_api_tag: "{{ triliovault_tag }}"
triliovault_datamover_api_image_full: "{{ triliovault_datamover_api_image }}:{{ triliovault_datamover_api_tag }}"



triliovault_datamover_image: "{{ triliovault_docker_registry }}/trilio/{{ kolla_base_distro }}-binary-trilio-datamover"
triliovault_datamover_tag: "{{ triliovault_tag }}"
triliovault_datamover_image_full: "{{ triliovault_datamover_image }}:{{ triliovault_datamover_tag }}"

triliovault_datamover_api_dimensions: "{{ default_container_dimensions }}"
triliovault_datamover_dimensions: "{{ default_container_dimensions }}"

## Under this directory, triliovault datamover will mount the backup target.
## This directory will get created on all compute hosts
## This directory will get mounted inside triliovault datamover container as bind mount
## This is needed to support 'snapshot mount' feature of triliovault
## User needs to mount this directory on 'nova_compute' and 'nova_libvirt' container.

triliovault_parent_data_directory: "/var/trilio" 

triliovault_datamover_user_id: "42436"
triliovault_datamover_group_id: "42436"

triliovault_datamover_api_default_volumes:
  - "{{ node_config_directory }}/triliovault-datamover-api/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if kolla_base_distro in ['debian', 'ubuntu'] else '' }}"
  - "/lib/modules:/lib/modules:ro"
  - "kolla_logs:/var/log/kolla/"

triliovault_datamover_default_volumes:
  - "{{ node_config_directory }}/triliovault-datamover/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if kolla_base_distro in ['debian', 'ubuntu'] else '' }}"
  - "kolla_logs:/var/log/kolla/"
  - "/dev:/dev"
  - "{% if enable_iscsid | bool %}iscsi_info:/etc/iscsi{% endif %}"
  - "{{ nova_instance_datadir_volume }}:/var/lib/nova/"
  - "{{ triliovault_parent_data_directory }}:{{ triliovault_parent_data_directory }}:shared"


####################
# OpenStack
####################

triliovault_datamover_api_admin_endpoint: "{{ admin_protocol }}://{{ nova_internal_fqdn | put_address_in_context('url') }}:{{ triliovault_datamover_api_port }}/v2"
triliovault_datamover_api_internal_endpoint: "{{ internal_protocol }}://{{ nova_internal_fqdn | put_address_in_context('url') }}:{{ triliovault_datamover_api_port }}/v2"
triliovault_datamover_api_public_endpoint: "{{ public_protocol }}://{{ nova_external_fqdn | put_address_in_context('url') }}:{{ triliovault_datamover_api_port }}/v2"

triliovault_logging_debug: "{{ openstack_logging_debug }}"
openstack_triliovault_auth: "{{ openstack_auth }}"
triliovault_datamover_api_port: 8784
triliovault_datamover_api_listen_port: "{{ triliovault_datamover_api_port }}"


####################
# Keystone
####################
triliovault_ks_services:
  - name: "dmapi"
    type: "datamover"
    description: "TrilioVault Datamover Api Service"
    endpoints:
      - {'interface': 'admin', 'url': '{{ triliovault_datamover_api_admin_endpoint }}'}
      - {'interface': 'internal', 'url': '{{ triliovault_datamover_api_internal_endpoint }}'}
      - {'interface': 'public', 'url': '{{ triliovault_datamover_api_public_endpoint }}'}

triliovault_keystone_user: "dmapi"	



triliovault_ks_users:
  - project: "service"
    user: "{{ triliovault_keystone_user }}"
    password: "{{ triliovault_keystone_password }}"
    role: "admin"


####################
# Notification
####################
triliovault_notification_topics:
  - name: notifications
    enabled: "{{ enable_ceilometer | bool or enable_searchlight | bool }}"
  - name: vitrage_notifications
    enabled: "{{ enable_vitrage | bool }}"

triliovault_enabled_notification_topics: "{{ triliovault_notification_topics | selectattr('enabled', 'equalto', true) | list }}"



###### Optional configurable
## TrilioVault database user
triliovault_database_user: "dmapi"
triliovault_database_name: "dmapi"
triliovault_database_address: "{{ database_address | put_address_in_context('url') }}:{{ database_port }}"

####################
# TLS
####################
triliovault_enable_tls_backend: "{{ kolla_enable_tls_backend }}"


## TrilioVault Inventory.  Refer triliovault_inventory file. 
triliovault_datamover_api_group: 'triliovault-datamover-api'
triliovault_datamover_group: 'triliovault-datamover'


## Log directories for triliovault services
triliovault_kolla_log_dir: "/var/log/kolla"
triliovault_datamover_log_dir: "{{ triliovault_kolla_log_dir }}/triliovault-datamover"
triliovault_datamover_api_log_dir: "{{ triliovault_kolla_log_dir }}/triliovault-datamover-api"

############ Following variables are user configurable ##########
############ Copy all the following variables in this file to "/etc/kolla/globals.yaml" and configure their values.
## Whether to enable TrilioVault or not on OpenStack cloud
enable_triliovault: "yes"

## TrilioVault's containers tag
triliovault_tag: "4.1.6-ussuri"
## TrilioVault docker registry credentials. Request credentials from TrilioVault team.
triliovault_docker_username: ""
triliovault_docker_password: ""
triliovault_docker_registry: "docker.io"


## triliovault backup target possible values: 'nfs'/'amazon_s3'/'ceph_s3'
triliovault_backup_target: 'nfs'

### 'NFS' backup target details
## Valid for backup target 'nfs' only, provide full NFS share path
triliovault_nfs_shares: '192.168.122.101:/opt/tvault'
## Valid for backup target 'nfs' only, Following parameter takes NFS mount options. 
## Keep default values, unless you have a special need.
triliovault_nfs_options: 'nolock,soft,timeo=180,intr,lookupcache=none'


### 'amazon_s3/ceph_s3' backup target details
## Valid for 'amazon_s3'/'ceph_s3' backup target, provide S3 access key
triliovault_s3_access_key: ''
## Valid for 'amazon_s3'/'ceph_s3' backup target, provide S3 secret key
triliovault_s3_secret_key: ''
## Valid for 'amazon_s3'/'ceph_s3' backup target, provide S3 region
## if your s3 does not have any region, just keep the parameter as it is
triliovault_s3_region_name: 'us-east-1'
## Valid for 'amazon_s3'/'ceph_s3' backup target, provide S3 bucket name
triliovault_s3_bucket_name: ''
## Valid for 'ceph_s3' backup target only, provide S3 endpoint url
## This paramter is not valid for Amazon S3 backup target type, keep it as it is
triliovault_s3_endpoint_url: ''
## Valid for 'ceph_s3' backup target only, If SSL is enabled on S3 endpoint url then change it to 'True', otherwise keep it as 'False'
triliovault_s3_ssl_enabled: False
## Valid for 'ceph_s3' backup target only, if SSL is enabled on S3 endpoint URL and SSL certificates are self signed
# OR issued by a private authority then, user needs to copy the 'ceph s3 ca chain file' to "/etc/kolla/config/triliovault/" 
# directory on ansible server. You need to create this directory if not exists already.
# And provide the cert file name as value of following parameter.
triliovault_s3_ssl_cert_file_name: 's3-cert.pem'

## Valid for 'ceph_s3' backup target only, if SSL is enabled on S3 endpoint URL and SSL certificates are self signed or issued by private authority,
## then, user needs to set this parameter value to: True , otherwise keep it's value as False.
## Type: Boolean
triliovault_copy_ceph_s3_ssl_cert: False
