---
- name: create /tmp/datamover_url
  template:
     src: datamover_url
     dest: /tmp/datamover_url
   
- name: create apt repo file in if  ansible_distribution is ubuntu16
  template:
     src: trilio.list
     dest: "{{trilio_apt_repo_file_path}}"

- name: install tvault-datamover-api deb package on ubuntu xenial or above
  apt:
     update_cache: yes
     name: dmapi
     state: latest
     allow_unauthenticated: yes
  notify:
      - restart tvault-datamover-api

- name: change permission of datamover log file
  file: path={{datamover_log_dir}} owner={{TVAULT_CONTEGO_EXT_USER}} group={{TVAULT_CONTEGO_EXT_GROUP}} state=directory recurse=yes
  notify:
      - restart tvault-datamover-api

- name: find out path of dmapi bianry
  shell: which dmapi-api
  register: dmapi_bin

- name: execute populate-conf binary
  shell: populate-conf
  register: populate_conf_ubuntu
  notify:
      - restart tvault-datamover-api

##Ubuntu16 and above
- block:
  - name: create tvault-datamover-api service in systemd if ansible_distribution is Centos/RHEL/SLES
    template:
       src: tvault_datamover_service.j2
       dest: "{{datamover_service_file_path}}"
    register: create_systemd_ubuntu
    notify:
        - restart tvault-datamover-api

  - name: enable and daemon reload tvault-datamover-api service
    shell: systemctl daemon-reload
    when: (populate_conf_ubuntu.changed or create_systemd_ubuntu.changed)
    notify:
        - restart tvault-datamover-api
  when: ansible_distribution=="Ubuntu" and (ansible_lsb.codename == xenial or ansible_lsb.codename == willy)


##Ubuntu14
- name: create tvault-datamover-api service in systemd if ansible_distribution is uubuntu16
  template:
     src: datamover_service_debian.j2
     dest: "{{datamover_service_debian_path}}"
  notify:
     - restart tvault-datamover-api
  when: ansible_distribution=="Ubuntu" and (ansible_lsb.codename != xenial and ansible_lsb.codename != willy)
