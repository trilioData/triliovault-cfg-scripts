---
- name: Setup the OS service
  delegate_to: "{{ _service_setup_host }}"
  vars:
    ansible_python_interpreter: "{{ _service_setup_host_python_interpreter }}"
  block:
    - name: Add keystone domain
      os_keystone_domain:
        cloud: default
        state: present
        name: "{{ _domain_name }}"
        endpoint_type: admin
        verify: "{{ not _service_adminuri_insecure }}"
      register: add_domain
      when: _domain_name is defined
      until: add_domain is success
      retries: 5
      delay: 10

    - name: Add service project
      os_project:
        cloud: default
        state: present
        name: "{{ _project_name }}"
        description: "{{ _project_description | default(omit) }}"
        domain_id: "{{ _project_domain | default('default') }}"
        endpoint_type: admin
        validate_certs: "{{ not (_service_adminuri_insecure | default(True) | bool) }}"
      register: add_service
      when:
        - not (_service_in_ldap | default(False) | bool)
        - _project_name is defined
      until: add_service is success
      retries: 5
      delay: 10

    - name: Add services to the keystone service catalog
      os_keystone_service:
        cloud: default
        state: "{{ item.state | default('present') }}"
        name: "{{ item.name }}"
        service_type: "{{ item.type }}"
        description: "{{ item.description | default('') }}"
        endpoint_type: admin
        validate_certs: "{{ not (_service_adminuri_insecure | default(True) | bool) }}"
      register: add_service
      with_items: "{{ _service_catalog }}"
      when: _service_catalog is defined
      until: add_service is success
      retries: 5
      delay: 10

    - name: Add keystone roles
      os_keystone_role:
        cloud: default
        state: present
        name: "{{ item.role }}"
        endpoint_type: admin
        validate_certs: "{{ not (_service_adminuri_insecure | default(True) | bool) }}"
      register: add_service
      when:
        - not (_service_in_ldap | default(False) | bool)
        - _service_users is defined
        - "'role' in item"
        - (item.condition | default(True)) | bool
      until: add_service is success
      with_items: "{{ _service_users }}"
      retries: 5
      delay: 10
      no_log: True

    - name: Add service users
      os_user:
        cloud: default
        state: present
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        domain: "{{ item.domain | default('default') }}"
        default_project: "{{ item.project | default(_service_project_name) }}"
        endpoint_type: admin
        validate_certs: "{{ not (_service_adminuri_insecure | default(True) | bool) }}"
        update_password: always
      register: add_service
      when:
        - not (_service_in_ldap | default(False) | bool)
        - _service_users is defined
        - "'name' in item"
        - "'password' in item"
        - (item.condition | default(True)) | bool
      until: add_service is success
      with_items: "{{ _service_users }}"
      retries: 5
      delay: 10
      no_log: True

    - name: Add service users to the role
      os_user_role:
        cloud: default
        state: present
        user: "{{ item.name }}"
        role: "{{ item.role }}"
        project: "{{ item.project | default(_service_project_name) }}"
        domain: "{{ item.domain | default(omit) }}"
        endpoint_type: admin
        validate_certs: "{{ not (_service_adminuri_insecure | default(True) | bool) }}"
      register: add_service
      when:
        - not (_service_in_ldap | default(False) | bool)
        - _service_users is defined
        - "'name' in item"
        - "'role' in item"
        - (item.condition | default(True)) | bool
      until: add_service is success
      with_items: "{{ _service_users }}"
      retries: 5
      delay: 10
      no_log: True

    - name: Add endpoints to keystone endpoint catalog
      os_keystone_endpoint:
        cloud: default
        state: "{{ item.state | default('present') }}"
        service: "{{ item.service }}"
        endpoint_interface: "{{ item.interface }}"
        url: "{{ item.url }}"
        region: "{{ _service_region | default('RegionOne') }}"
        endpoint_type: admin
        validate_certs: "{{ not (_service_adminuri_insecure | default(True) | bool) }}"
      register: add_service
      until: add_service is success
      retries: 5
      delay: 10
      with_items: "{{ _service_endpoints }}"
      when: _service_endpoints is defined
