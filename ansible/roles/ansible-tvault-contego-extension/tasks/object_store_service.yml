- name: set external object store to tvault_contego_s3_ext if S3 is true
  set_fact:
       TVAULT_CONTEGO_EXT_OBJECT_STORE: "{{TVAULT_CONTEGO_EXT_S3}}"
  when: object_store == True and S3 == True

- debug: msg="external s3:{{TVAULT_CONTEGO_EXT_S3}}" verbosity={{verbosity_level}}

- name: Install tvault-object-store layer on centos/RedHat if Python2
  yum:
    update_cache: yes
    name:
      - python-s3fuse-plugin-cent7
    state: latest
  when: >
      ((ansible_distribution_major_version=="7" and ansible_distribution== centos and PYTHON_VERSION=="python2") or
      (ansible_distribution_major_version=="7" and ansible_distribution=="RedHat" and PYTHON_VERSION=="python2") or
      (ansible_distribution_major_version=="8" and ansible_distribution=="RedHat" and PYTHON_VERSION=="python2") or
      (ansible_distribution_major_version=="8" and ansible_distribution=="RedHat" and PYTHON_VERSION=="python2"))

- block:
  - name: Install tvault-object-store layer on Ubuntu if Python2
    shell: |
      curl -Og6 http://{{IP_ADDRESS}}:{{ PORT_NO }}/deb-repo/deb-repo/s3-fuse-plugin_{{ TVAULT_PACKAGE_VERSION  }}_all.deb
      dpkg --configure -a && apt-get -o Dpkg::Options::="--force-confold" install ./s3-fuse-plugin_{{ TVAULT_PACKAGE_VERSION  }}_all.deb -y {{EXTRA_APT_VAR}}
      rm -rf s3-fuse-plugin_{{TVAULT_PACKAGE_VERSION}}_all.deb
    when: PYTHON_VERSION=="python2"

  - name: Install tvault-object-store layer on Ubuntu if python3
    shell: |
        curl -Og6 http://{{IP_ADDRESS}}:{{ PORT_NO }}/deb-repo/deb-repo/python3-s3-fuse-plugin_{{ TVAULT_PACKAGE_VERSION  }}_all.deb
        dpkg --configure -a && apt-get -o Dpkg::Options::="--force-confold" install ./python3-s3-fuse-plugin_{{ TVAULT_PACKAGE_VERSION  }}_all.deb -y {{EXTRA_APT_VAR}}
        rm -rf python3-s3-fuse-plugin_{{TVAULT_PACKAGE_VERSION}}_all.deb
    when: PYTHON_VERSION=="python3"
  when: ansible_distribution == ubuntu

- name: populate_object_store_parameters if s3 others compatible
  template:
    src: s3_others_compatible.conf.j2
    dest: "{{TVAULT_OBJECT_STORE_CONF}}"
  when: s3_type == "Other_S3_Compatible"

- name: populate_object_store_parameters if Amazon
  template:
    src: amazon_conf.j2
    dest: "{{TVAULT_OBJECT_STORE_CONF}}"
  when: s3_type == "Amazon"

- block:
  - shell: systemctl daemon-reload
  - name: enable tvault-object-store service and reload it
    service: name=tvault-object-store.service  state=started enabled=yes
  ignore_errors: yes

