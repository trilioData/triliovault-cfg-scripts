---
- set_fact:
     files_path : "{{playbook_dir}}/roles/ansible-tvault-contego-extension/ansible-contego-extension-install"

- name: get openstack version
  include_role: 
      name: ansible-common/get_openstack_version/
- debug: msg="openstack release -{{OPEN_STACK_RELEASE}}" verbosity=2

- name: set object_store to false if NFS is true
  set_fact: 
      object_store: False 
  when: NFS == True

- name: set object_store to true if NFS is flase
  set_fact:
      object_store: True
  when: NFS == False

- name: setting up swift authentication variables if contego installed with swift as backend
  include_role:
      name: ansible-common/check_virsh_version  

- name: Adding passwordless sudo access to nova user 
  lineinfile: "dest=/etc/sudoers.d/tvault-nova state=present create=yes line='nova ALL=(ALL) NOPASSWD: ALL'"

- name: Adding nova user to system groups
  user: name={{TVAULT_CONTEGO_EXT_USER}} groups="{{item}}" state=present
  with_items: 
   - kvm 
   - qemu
   - disk

- name: setting up swift authentication variables if contego installed with swift as backend 
  import_tasks: populate_swift_conf.yml
  when: Swift == True

- name: check if /usr/lib64 dir not exist or not
  stat: path=/usr/lib64
  register: lib64_dir

- debug: msg="print True if lib64 dir is exist:{{lib64_dir.stat.exists}}" verbosity=2
  
- name: create symlink /usr/lib64/ if /usr/lib64 dir not exist
  file: src=/usr/lib/ dest=/usr/lib64 state=link    
  when: lib64_dir.stat.exists != true

- name: create virtenv dir(/home/tvault) if it is not exist
  file: path={{TVAULT_CONTEGO_VIRTENV}} state=directory mode=765 owner="{{TVAULT_CONTEGO_EXT_USER}}" group="{{TVAULT_CONTEGO_EXT_GROUP}}"

- name: check if /home/tvault/.venv directory exist or not
  stat: path={{TVAULT_CONTEGO_VIRTENV_PATH}}
  register: venv_dir

- debug: msg="print true if  virtual env dir exists:{{venv_dir.stat.exists}}" verbosity=2

- block:
    - name: activate virtual environment and grep tvault contego from virtual environment
      shell: | 
           cd '{{TVAULT_CONTEGO_VIRTENV}}'
           source .virtenv/bin/activate
           pip list | grep tvault-contego | cut -d'(' -f2 | cut -d')' -f1
           deactivate
      register: tvault_contego_version     
  
    #- name: print tvault_contego_version from environment
    - debug: msg="tvault-contego version from previous installed pack:{{tvault_contego_version.stdout}}" verbosity=2
         
    - name: set tvault_contego_version to a varaible if contego is already installed
      set_fact:
          tvault_contego_version_set : "{{tvault_contego_version.stdout}}"
  when: venv_dir.stat.exists == true

- name: set tvault_contego_version to a varaible if contego is already installed
  set_fact:
          tvault_contego_version_set : ""
  when: venv_dir.stat.exists == false

- name: grep tvault-contego version using CURL call
  shell: curl -s http://{{IP_ADDRESS}}:8081/packages/ | grep tvault-contego-[0-9] | awk -F 'tvault-contego-' '{print $2}' | cut -c-5
  register: TVAULT_CONTEGO_VERSION

- debug: msg="tvault contego version from current package:{{TVAULT_CONTEGO_VERSION.stdout}}" verbosity=2

- name: print tvault contego version 
  fail: msg="Latest Tvault-contego package is already installed, exiting"
  when: TVAULT_CONTEGO_VERSION.stdout == tvault_contego_version_set

- name: download virtual environment tar bundle from applainace
  get_url: url="http://{{IP_ADDRESS}}:8081/packages/{{OPEN_STACK_RELEASE}}/tvault-contego-virtenv.tar.gz" dest="{{TVAULT_CONTEGO_VIRTENV}}"

- name: remove existing .virtenv directory
  file: path={{TVAULT_CONTEGO_VIRTENV_PATH}} state=absent

- name:  Untar virtual environment bundle
  unarchive: src="{{TVAULT_CONTEGO_VIRTENV}}/tvault-contego-virtenv.tar.gz" dest="{{TVAULT_CONTEGO_VIRTENV}}" remote_src=yes

- name: set cryptography if openstack release is mitaka 
  shell:   | 
            python -c "import cryptography;print cryptography.__path__[0]"
            python -c "import Crypto;print Crypto.__path__[0]"
  register: cryptography_mitaka
  when: OPEN_STACK_RELEASE == "mitaka"

- name: set cryptography if openstack release is newton
  shell:   |
            python -c "import cryptography;print cryptography.__path__[0]"
            python -c "import libvirtmod;print libvirtmod.__file__"
            python -c "import cffi;print cffi.__path__[0]"
            python -c "import _cffi_backend;print _cffi_backend.__file__" 
  register: cryptography
  when: OPEN_STACK_RELEASE == "newton"

- debug: msg="cryptography_path={{cryptography_mitaka}}"  verbosity=2

- name: activate the virtual environment and set cryptography symlinks when openstack_release is mitaka
  shell:  | 
        cd '{{TVAULT_CONTEGO_VIRTENV}}'
        source .virtenv/bin/activate
        pip install http://{{IP_ADDRESS}}:8081/packages/tvault-contego-{{TVAULT_CONTEGO_VERSION.stdout}}.tar.gz
        rm -rf .virtenv/lib/python2.7/site-packages/cryptography
        ln -s {{cryptography_mitaka.stdout_lines[0]}} .virtenv/lib/python2.7/site-packages/cryptography
        rm -rf .virtenv/lib/python2.7/site-packages/Crypto
        ln -s {{cryptography_mitaka.stdout_lines[1]}} .virtenv/lib/python2.7/site-packages/Crypto
        pip list | grep tvault-contego | cut -d'(' -f2 | cut -d')' -f1
        rm -rf tvault-contego-virtenv.tar.gz
  register: tvault_contego_version_installed
  when: OPEN_STACK_RELEASE == "mitaka"

- name: activate the virtual environment and set cryptography symlinks when openstack_release is premitaka
  shell:  |
        cd '{{TVAULT_CONTEGO_VIRTENV}}'
        source .virtenv/bin/activate
        pip install http://{{IP_ADDRESS}}:8081/packages/tvault-contego-{{TVAULT_CONTEGO_VERSION.stdout}}.tar.gz
        pip list | grep tvault-contego | cut -d'(' -f2 | cut -d')' -f1
        rm -rf tvault-contego-virtenv.tar.gz
  register: tvault_contego_version_installed
  when: OPEN_STACK_RELEASE == "premitaka"

- name: activate the virtual environment and set cryptography symlinks when openstack_release is newton
  shell:  |
        cd '{{TVAULT_CONTEGO_VIRTENV}}'
        source .virtenv/bin/activate
        pip install http://{{IP_ADDRESS}}:8081/packages/tvault-contego-{{TVAULT_CONTEGO_VERSION.stdout}}.tar.gz
        rm -rf .virtenv/lib/python2.7/site-packages/cryptography
        ln -s {{cryptography.stdout_lines[0]}} .virtenv/lib/python2.7/site-packages/cryptography
        cp {{cryptography.stdout_lines[1]}} .virtenv/lib/python2.7/site-packages/libvirtmod.so
        rm -rf .virtenv/lib/python2.7/site-packages/cffi
        ln -s {{cryptography.stdout_lines[2]}} .virtenv/lib/python2.7/site-packages/cffi
        cp {{cryptography.stdout_lines[3]}} .virtenv/lib/python2.7/site-packages/_cffi_backend.so 
        pip list | grep tvault-contego | cut -d'(' -f2 | cut -d')' -f1
        rm -rf tvault-contego-virtenv.tar.gz
  register: tvault_contego_version_installed
  when: OPEN_STACK_RELEASE == "newton"

- debug: msg="tvault_contego_version_installed:{{tvault_contego_version_installed}}" verbosity=2

- name: ensure that /var/log/nova file is present
  file: path="/var/log/nova" state=directory owner="{{TVAULT_CONTEGO_EXT_USER}}" group="{{TVAULT_CONTEGO_EXT_GROUP}}"

- name: check if tvault contego external bin is present or not  
  stat: path="{{TVAULT_CONTEGO_EXT_BIN}}"
  register: tvault_contego_ext_bin

- debug: msg="tvault_contego_ext_bin:{{tvault_contego_ext_bin}}" verbosity=2

- name: Fail if tvault_contego_ext_bin directory is not present
  fail: msg="vault_contego_external_bin directory is not present" 
  when: tvault_contego_ext_bin.stat.exists != true

- name: check if tvault contego external bin is present or not
  stat: path="{{TVAULT_CONTEGO_CONF}}"
  register: tvault_contego_conf

- name: create /etc/tvault-contego dir if tvault_contego_cof file is not present
  file: path=/etc/tvault-contego state=directory
  when: tvault_contego_conf.stat.exists != true

- name: write content into {{TVAULT_CONTEGO_CONF}} if nfs is used as backend
  copy:
     content: |
        [DEFAULT]
        vault_storage_nfs_export = {{NFS_SHARES}}
        vault_storage_nfs_options = {{NFS_OPTS}}
        vault_storage_type = nfs
        vault_data_directory_old = /var/triliovault
        vault_data_directory = /var/triliovault-mounts
        log_file = /var/log/nova/tvault-contego.log
        debug = False
        verbose = True
        max_uploads_pending = 3
        max_commit_pending = 3      

     dest: "{{TVAULT_CONTEGO_CONF}}"
  when: NFS == True

- name: write content into {{TVAULT_CONTEGO_CONF}} if swift is used as backend
  block:
    - copy: src={{files_path}}/files/conf/tvault_contego_conf_swift.conf dest={{TVAULT_CONTEGO_CONF}} 
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory_old value="{{TVAULT_DATA_DIR_OLD}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory value="{{TVAULT_DATA_DIR}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_auth_url value="{{VAULT_SWIFT_AUTH_URL}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_username value="{{VAULT_SWIFT_USERNAME}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_password value="{{VAULT_SWIFT_PASSWORD}}" state=present 
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_auth_version value="{{VAULT_SWIFT_AUTH_VERSION}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_domain_id value="{{VAULT_SWIFT_DOMAIN_ID}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_domain_name value="{{VAULT_SWIFT_DOMAIN_NAME}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_tenant value={{VAULT_SWIFT_TENANT}} state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_swift_region_name value={{VAULT_SWIFT_REGION_NAME}} state=present
  when: Swift == True

- name: copy tvault-contego config file to destination and write content into it if s3 AWS used as backend
  block:
    - copy: src={{files_path}}/files/conf/tvault_contego_aws_s3_conf.conf  dest={{TVAULT_CONTEGO_CONF}}
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory_old value="{{TVAULT_DATA_DIR_OLD}}" state=present 
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory value="{{TVAULT_DATA_DIR}}" state=present 
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_access_key_id value="{{VAULT_S3_ACCESS_KEY}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_secret_access_key value="{{VAULT_S3_SECRET_ACCESS_KEY}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_region_name value="{{VAULT_S3_REGION_NAME}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_bucket value="{{VAULT_S3_BUCKET}}" state=present
  when: (S3 == True) and (Amazon == True) 

- name: copy tvault-contego config file to destination and write content into it if s3 Ceph used as backend
  block:
    - copy: src={{files_path}}/files/conf/tvault_contego_ceph_s3_conf.conf  dest={{TVAULT_CONTEGO_CONF}}
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory_old value="{{TVAULT_DATA_DIR_OLD}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory value="{{TVAULT_DATA_DIR}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_access_key_id value="{{VAULT_S3_ACCESS_KEY}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_secret_access_key value="{{VAULT_S3_SECRET_ACCESS_KEY}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_region_name value="{{VAULT_S3_REGION_NAME}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_bucket value="{{VAULT_S3_BUCKET}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_endpoint_url value="{{VAULT_S3_ENDPOINT_URL}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_ssl value="{{VAULT_S3_SECURE}}" state=present
  when: (S3 == True) and (Ceph_S3 == True)

- name: copy tvault-contego config file to destination and write content into it if s3 minio used as backend
  block:
    - copy: src={{files_path}}/files/conf/tvault_contego_aws_ceph_conf.conf  dest={{TVAULT_CONTEGO_CONF}}
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory_old value="{{TVAULT_DATA_DIR_OLD}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_data_directory value="{{TVAULT_DATA_DIR}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_access_key_id value="{{VAULT_S3_ACCESS_KEY}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_secret_access_key value="{{VAULT_S3_SECRET_ACCESS_KEY}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_region_name value="{{VAULT_S3_REGION_NAME}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_bucket value="{{VAULT_S3_BUCKET}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_endpoint_url value="{{VAULT_S3_ENDPOINT_URL}}" state=present
    - ini_file: path={{TVAULT_CONTEGO_CONF}} section=DEFAULT option=vault_s3_ssl value="{{VAULT_S3_SECURE}}" state=present
  when: (S3 == True) and (Minio_S3 == True)

- name: ensure that {{TVAULT_DATA_DIR}} is present
  file: name="{{TVAULT_DATA_DIR}}" state=directory

- name: ensure that {{TVAULT_DATA_DIR_OLD}} is removed
  file: name="{{TVAULT_DATA_DIR_OLD}}" state=absent

- name: ensure that {{TVAULT_DATA_DIR_OLD}} is present
  file: name="{{TVAULT_DATA_DIR_OLD}}" state=directory

- name: create logrotate file for tvault-contego.log
  copy: src={{files_path}}/files/log/tvault-contego  dest=/etc/logrotate.d/tvault-contego  

- name: get configuration parameters from {{TVAULT_CONTEGO_CONF}}  
  copy: src={{files_path}}/files/py_files/get_configs.py dest=/tmp/get_configs.py

- name: run /tmp/get_configs.py
  shell: "sudo -u {{TVAULT_CONTEGO_EXT_USER}} python /tmp/get_configs.py"
  register: CONFIG_FILES

- debug: msg=" config file output -{{CONFIG_FILES.stdout}}" verbosity=2

- name: run /tmp/get_configs.py with config file
  shell: "echo '{{CONFIG_FILES.stdout}} --config-file={{TVAULT_CONTEGO_CONF}}'"
  register: CONFIG_FILES

- debug: msg="config file string is:{{CONFIG_FILES.stdout}}" verbosity=2

- name: check if /etc/nova/nova.conf.d is exist or not
  stat: path=/etc/nova/nova.conf.d
  register: is_nova_conf_present

- name: run /tmp/get_configs.py with config file and config directory
  shell: "echo '{{CONFIG_FILES.stdout}} --config-dir=/etc/nova/nova.conf.d'"
  register: CONFIG_FILES_1
  #when: is_nova_conf_present.stat.exists == true

- name: remove /tmp/get_configs.py file
  file: path=/tmp/get_configs.py state=absent

- set_fact:
    CONFIG_FILES: "{{CONFIG_FILES.stdout}}"
    CONFIG_FILES_1: "{{CONFIG_FILES_1.stdout}}" 

- name: create tvault-contego-service-in-systemd 
  import_tasks: create_contego_service_centos.yml
  when: ansible_distribution_major_version=="7" and ansible_distribution=="CentOS"
 
- name: create tvault-contego-service-in-systemd
  import_tasks: create_contego_service_ubuntu.yml
  when: ansible_distribution=="Ubuntu"

- name: create tvault-contego-service-in-systemd
  import_tasks: create_contego_service_suse.yml
  when: ansible_distribution=="Suse"
 
- name: set external object store to tvault_contego_s3_ext if S3 is true
  set_fact: 
       TVAULT_CONTEGO_EXT_OBJECT_STORE: "{{TVAULT_CONTEGO_EXT_S3}}"
  when: object_store == True and S3 == True

- name: set external object store to tvault_contego_swift if swift is true
  set_fact:
       TVAULT_CONTEGO_EXT_OBJECT_STORE: "{{TVAULT_CONTEGO_EXT_SWIFT}}"
  when: object_store == True and Swift == True

- debug: msg="external s3:{{TVAULT_CONTEGO_EXT_S3}}" verbosity=2
- debug: msg="object store:{{TVAULT_CONTEGO_EXT_SWIFT}}" verbosity=2

- name: copy object store service file , write content , enable and daemon reload service if object restore is True
  block: 
    - set_fact:
        service_file_dest_path: /etc/systemd/system/tvault-object-store.service
    - copy: src={{files_path}}/files/services/tvault-object-store.service  dest={{service_file_dest_path}}
    - ini_file: path={{service_file_dest_path}} section=Service option=User value="{{TVAULT_CONTEGO_EXT_USER}}" state=present 
    - ini_file: path={{service_file_dest_path}} section=Service option=Group value="{{TVAULT_CONTEGO_EXT_USER}}" state=present
    - ini_file: path={{service_file_dest_path}} section=Service option=ExecStart value="{{TVAULT_CONTEGO_EXT_PYTHON}} {{TVAULT_CONTEGO_EXT_OBJECT_STORE}} --config-file={{TVAULT_CONTEGO_CONF}}" state=present

    - shell: systemctl daemon-reload
    - name: enable tvault-object-store service and reload it
      service: name=tvault-object-store  state=started enabled=yes
  when: object_store == True  and ansible_distribution_major_version=="7" and ansible_distribution=="CentOS" 
